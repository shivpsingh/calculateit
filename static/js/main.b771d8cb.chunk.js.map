{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","DEFAULT_TIME","add","x","y","subtract","multiply","divide","OPERATIONS","state","firstNumber","getRandomNumber","secondNumber","operation","timeleft","response","score","questions","updateTimeLeft","nextQuestion","setState","oldState","componentDidMount","setInterval","printGame","symbol","type","onKeyPress","checkResult","onChange","handleInput","placeholder","value","event","target","key","userInput","isNaN","alert","parseInt","func","handler","multiplier","Math","ceil","random","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAoIeA,G,kNA/HbC,aAAe,G,EAEfC,IAAM,SAACC,EAAGC,GACR,OAAOD,EAAIC,G,EAGbC,SAAW,SAACF,EAAGC,GACb,OAAOD,EAAIC,G,EAGbE,SAAW,SAACH,EAAGC,GACb,OAAOD,EAAIC,G,EAGbG,OAAS,SAACJ,EAAGC,GACX,OAAOD,EAAIC,G,EAGbI,WAAa,CAAC,CACZ,OAAU,IACV,KAAQ,EAAKN,KACZ,CACD,OAAU,IACV,KAAQ,EAAKG,UACZ,CACD,OAAU,IACV,KAAQ,EAAKC,UACZ,CACD,OAAU,IACV,KAAQ,EAAKC,S,EAOfE,MAAQ,CACJC,YAAa,EAAKC,gBAAgB,IAClCC,aAAc,EAAKD,gBAAgB,IACnCE,UAAW,EAAKL,WAAW,EAAKG,gBAAgB,GAAK,GACrDG,SAAU,EAAKb,aACfc,SAAU,GACVC,MAAO,EACPC,UAAW,G,EAGfC,eAAiB,WACZ,EAAKT,MAAMK,UAAY,EACxB,EAAKK,eAEL,EAAKC,UAAS,SAAAC,GAAQ,MAAK,CACvBP,SAAUO,EAASP,SAAW,O,EAKtCQ,kBAAoB,WAClBC,YAAY,EAAKL,eAAsC,GAAtB,EAAKT,MAAMK,W,EAG9CU,UAAY,WACV,OACE,gCACE,+BAAK,EAAKf,MAAMC,YAAhB,IAA8B,EAAKD,MAAMI,UAAUY,OAAnD,IAA4D,EAAKhB,MAAMG,gBACvE,uBAAOc,KAAK,OAAOC,WAAY,EAAKC,YAAaC,SAAU,EAAKC,YAAaC,YAAY,yBAAyBC,MAAO,EAAKvB,MAAMM,WACpI,2CAAc,EAAKN,MAAMO,MAAzB,WAAwC,EAAKP,MAAMQ,aACnD,6CAAgB,EAAKR,MAAMK,gB,EAKjCgB,YAAc,SAACG,GACb,EAAKb,UAAS,SAAAC,GAAQ,MAAK,CACzBN,SAAUkB,EAAMC,OAAOF,W,EAI3Bb,aAAe,WACb,EAAKC,UAAS,SAAAC,GAAQ,MAAK,CACrBX,YAAa,EAAKC,gBAAgB,IAClCC,aAAc,EAAKD,gBAAgB,IACnCI,SAAU,GACVE,UAAWI,EAASJ,UAAY,EAChCH,SAAU,EAAKb,kB,EAIvB2B,YAAc,SAACK,GACb,GAAiB,UAAdA,EAAME,IAAiB,CACxB,IAAIC,EAAYH,EAAMC,OAAOF,MAC7B,GAAIK,MAAMD,GAOR,OAJAE,MAAM,mCACN,EAAKlB,UAAS,SAAAC,GAAQ,MAAK,CACvBN,SAAU,OAEP,KANPqB,EAAYG,SAASH,GAQvB,IAAI1B,EAAc6B,SAAS,EAAK9B,MAAMC,aAClCE,EAAe2B,SAAS,EAAK9B,MAAMG,cAGvB,EAAKH,MAAMI,UAAU2B,KAAK9B,EAAaE,KAExBwB,GAG7B,EAAKhB,UAAS,SAAAC,GAAQ,MAAK,CACzBL,MAAOK,EAASL,MAAQ,MAI5B,EAAKG,iB,EAITsB,QAAU,WACR,OAAO,EAAKjB,a,8DAtFEkB,GACd,OAAOC,KAAKC,KAAKD,KAAKE,SAAWN,SAASG,M,+BAyFxC,OAAOI,KAAKL,c,GA5HAM,IAAMC,YCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.b771d8cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  DEFAULT_TIME = 15;\r\n\r\n  add = (x, y) => {\r\n    return x + y;\r\n  }\r\n\r\n  subtract = (x, y) => {\r\n    return x - y;\r\n  }\r\n\r\n  multiply = (x, y) => {\r\n    return x * y;\r\n  }\r\n\r\n  divide = (x, y) => {\r\n    return x / y;\r\n  }\r\n\r\n  OPERATIONS = [{\r\n    'symbol': \"+\",\r\n    \"func\": this.add\r\n  }, {\r\n    'symbol': \"-\",\r\n    \"func\": this.subtract\r\n  }, {\r\n    'symbol': \"*\",\r\n    \"func\": this.multiply\r\n  }, {\r\n    'symbol': \"/\",\r\n    \"func\": this.divide\r\n  }]\r\n\r\n  getRandomNumber(multiplier) {\r\n    return Math.ceil(Math.random() * parseInt(multiplier));\r\n  }\r\n\r\n  state = {\r\n      firstNumber: this.getRandomNumber(10),\r\n      secondNumber: this.getRandomNumber(10),\r\n      operation: this.OPERATIONS[this.getRandomNumber(4) - 1],\r\n      timeleft: this.DEFAULT_TIME,\r\n      response: \"\",\r\n      score: 0,\r\n      questions: 0,\r\n    };\r\n\r\n  updateTimeLeft = () => {\r\n    if(this.state.timeleft <= 0) {\r\n      this.nextQuestion();\r\n    } else {\r\n      this.setState(oldState => ({\r\n          timeleft: oldState.timeleft - 1\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    setInterval(this.updateTimeLeft, this.state.timeleft * 60);\r\n  }\r\n\r\n  printGame = () => {\r\n    return (\r\n      <div>\r\n        <h1>{this.state.firstNumber} {this.state.operation.symbol} {this.state.secondNumber}</h1>\r\n        <input type=\"text\" onKeyPress={this.checkResult} onChange={this.handleInput} placeholder=\"Please type the answer\" value={this.state.response}></input>\r\n        <h3>Score is {this.state.score} out of {this.state.questions}</h3>\r\n        <h4>Time left: {this.state.timeleft}</h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleInput = (event) => {\r\n    this.setState(oldState => ({\r\n      response: event.target.value\r\n    }));\r\n  }\r\n\r\n  nextQuestion = () => {\r\n    this.setState(oldState => ({\r\n          firstNumber: this.getRandomNumber(10),\r\n          secondNumber: this.getRandomNumber(10),\r\n          response: \"\",\r\n          questions: oldState.questions + 1,\r\n          timeleft: this.DEFAULT_TIME\r\n      }));\r\n  }\r\n\r\n  checkResult = (event) => {\r\n    if(event.key === 'Enter') {\r\n      let userInput = event.target.value;\r\n      if(!isNaN(userInput)) {\r\n        userInput = parseInt(userInput);\r\n      } else {\r\n        alert('Only numeric values are allowed');\r\n        this.setState(oldState => ({\r\n            response: \"\",\r\n        }));\r\n        return null;\r\n      }\r\n      let firstNumber = parseInt(this.state.firstNumber);\r\n      let secondNumber = parseInt(this.state.secondNumber);\r\n      let correctAnswer = null;\r\n\r\n      correctAnswer = this.state.operation.func(firstNumber, secondNumber);\r\n\r\n      let result = correctAnswer === userInput ? true: false;\r\n\r\n      if(result) {\r\n        this.setState(oldState => ({\r\n          score: oldState.score + 1,\r\n        }));\r\n      }\r\n\r\n      this.nextQuestion();\r\n    }\r\n  }\r\n\r\n  handler = () => {\r\n    return this.printGame();\r\n  }\r\n\r\n  render() {\r\n      return this.handler();\r\n  }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}